package kr.or.ddit.util;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

import javax.crypto.spec.SecretKeySpec;

public class CryptoUtil {

	/**
	 * 문자열을 MD5방식으로 암호화(해시) 한다.
	 * @param str 암호화 할 문자열
	 * @return 암호화 된 문자열
	 * @throws NoSuchAlgorithmException 
	 * 
	 */
	
	public static String md5(String str) throws NoSuchAlgorithmException {
		MessageDigest md = MessageDigest.getInstance("M5D");
		md.update(str.getBytes());
		
		return Base64.getEncoder().encodeToString(md.digest());
		
		
	}
	
	// 문자열을 SHA-256방식으로 암호화 하는 메서드
	public static String sha256(String str) throws NoSuchAlgorithmException {
		MessageDigest md = MessageDigest.getInstance("SHA-256");
		md.update(str.getBytes());
		
		return Base64.getEncoder().encodeToString(md.digest());
	}
	
	
	
	
	// 문자열을 SHA-512방식으로 암호화 하는 메서드
	public static String sha512(String str) throws NoSuchAlgorithmException {
		MessageDigest md = MessageDigest.getInstance("SHA-512");
		md.update(str.getBytes());
		
		return Base64.getEncoder().encodeToString(md.digest());
	}
	
	/**
	 * AES 256 방식으로 암호화 하는 메서드
	 * @param str 암호화 할 문자열
	 * @param key 암호화 값 문자열
	 * @return 암호화된 문자열
	 * @throws UnsupportedEncodingException 
	 */
	
	
	public static String encryptAeS256(String str, String key) throws UnsupportedEncodingException {
		String iv = key.substring(0, 16);
		byte[] keyBytes = new byte[16];
		byte[] b = key.getBytes("UTF-8");
		int len = keyBytes.length;
		
		System.arraycopy(b, 0, KeyBytes, 0, len);
		
		//비밀 키 생성
		SecretKeySpec keySpec = new SecretKeySpec = 
				new SecretKeySpec(keyBytes, "AES");
		
	}
	
	
	
}






















