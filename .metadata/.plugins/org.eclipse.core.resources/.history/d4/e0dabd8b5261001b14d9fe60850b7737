package kr.or.ddit.mvc.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import kr.or.ddit.mvc.vo.MemberVO;
import kr.or.ddit.util.DBUtil3;

public class MemberDaolmpl implements IMemberDao {

	@Override
	public int insertMember(MemberVO memVO) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int cnt = 0;
		try {
			conn = DBUtil3.getConnection();
			String sql = "INSERT INTO MYMEMBER (MEM_ID,MEM_NAME,MEM_TEL,MEM_ADDR)"
					+ " VALUES(?, ?, ?, ?) ";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memVO.getMem_id());
			pstmt.setString(2, memVO.getMem_name());
			pstmt.setString(3, memVO.getMem_tel());
			pstmt.setString(4, memVO.getMem_addr());
			
			cnt = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		
		return 0;
	}

	@Override
	public int deleteMember(String memId) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int cnt =0;
		try {
			conn = DBUtil3.getConnection();
			String sql ="DELETE FROM MYMEMBER WHERE MEM_ID =?"; 
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memId);
			cnt = pstmt.executeUpdate();
					
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		return 0;
	}

	
	@Override
	public int updateMember(MemberVO memVO) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int cnt =0;
		try {
			conn = DBUtil3.getConnection();
			
			String sql = "UPDATE MYMEMBER SET "
					+ "MEM_NAME = ?,"
					+ "MEM_TEL = ?,"
					+ "MEM_ADDR = ? "
					+ "where mem_id = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memVO.getMem_name());
			pstmt.setString(2, memVO.getMem_tel());
			pstmt.setString(3, memVO.getMem_addr());
			pstmt.setString(4, memVO.getMem_id());
			
			cnt = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		
		return cnt;
	}

	@Override
	public List<MemberVO> getAllMember() {
		Connection conn = null;
		Statement stmt =null;
		ResultSet rs = null;
		List<MemberVO> memList = new ArrayList<>();
		
		
		try {
			conn = DBUtil3.getConnection();
		String sql = "SELECT * FROM MYMEMBER";
		stmt = conn.createStatement();
		
		rs = stmt.executeQuery(sql);
		
		while(rs.next()){
			MemberVO memVO = new MemberVO();
			memVO.setMem_id(rs.getNString("mem_id"));
			memVO.setMem_name(rs.getNString("mem_name"));
			memVO.setMem_tel(rs.getNString("mem_tel"));
			memVO.setMem_addr(rs.getNString("mem_addr"));
			
			memList.add(memVO);
		}
		
		} catch (SQLException e) {
			memList = null;
		}finally{
			if(rs!=null) try{ rs.close();}catch(SQLException e){}
			if(stmt!=null) try{ stmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		return memList;
	}

	@Override
	   public int getMemberCount(String memId) {
	      Connection conn = null;
	      PreparedStatement pstmt = null;
	      ResultSet rs = null;
	      int cnt = 0;
	      try {
	         conn = DBUtil3.getConnection();
	         String sql = "select count(*) as cnt from mymember where memId = ?";
	         pstmt = conn.prepareStatement(sql);
	         pstmt.setString(1, memId);
	         while(rs.next()){
	            cnt = rs.getInt("cnt");
	         }
	         
	      } catch (SQLException e) {
	         e.printStackTrace();
	      }finally{
	         if(rs != null) try{ rs.close(); } catch(SQLException e){};
	         if(pstmt != null) try{ pstmt.close(); } catch(SQLException e){};
	         if(conn != null) try{ conn.close(); } catch(SQLException e){};
	      }
	      return cnt;
	   }
	   
	}