package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

import kr.or.ddit.util.DBUtil;

/*
 * 	회원을 관리하는 프로그램을 작성하시오
 *  (오라클 DB의 MYMEMBER 테이블 이용)
 * 
 *  아래 메뉴의 기능을 모두 구현하시오 [CRUD 구현하기 연습]
 *  메뉴예시
 *  ===== 작업선택 ======
 *  1. 자료 추가
 *  2. 자료 삭제
 *  3. 자료 수정
 *  4. 전체 자료 출력
 *  0. 작업 끝
 * =======================
 * 작업선택 > 
 */

public class JdbcTest07 {

	public static void main(String[] args) {
		new JdbcTest07().start();
	}
	
	
//--------------------------------------------------------------------------
private int start(){
	
	Scanner sc = new Scanner(System.in);
	
	Connection conn = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;

	try {
		conn = DBUtil.getConnection();
		
		System.out.println("==================================");
		System.out.println("=========회원관리프로그램=========");
		System.out.println("==================================");
		
		while(true){
			int choice = menu();
			
			switch(choice){
			case 1 :
				insert();
				break;	//자료 추가
			
			case 2 : 
				delete();	//자료 삭제
				break;	
			
			case 3 : 
				update(); //자료 수정
				break;	
			
			case 4 : 
				show(); // 전체 자료 출력
				break;	
			
			case 0 : 
				System.out.println("프로그램을 종료합니다!!!");
				break; 
				
			default :
				System.out.println("작업번호를 잘못입력하셨습니다");
				System.out.println("다시입력하세요");
			
			}
		}
		
	} catch (Exception e) {
	}
	
	
	return start();
}
//-------------------------------------------------------------------------	
private int menu(){	
		Scanner sc = new Scanner(System.in);
		System.out.println("1. 자료 추가");
		System.out.println("2. 자료 삭제");
		System.out.println("3. 자료 수정");
		System.out.println("4. 전체 자료 출력");
		System.out.println("0. 작업 끝");
		System.out.println("=============================");
		System.out.print("숫자입력>");
		int input = Integer.parseInt(sc.nextLine());
		return input;
	}
//----------------------------------------------------------------------------
private void insert(){
	
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	System.out.println("MYMEMBER에 어떤 자료를 추가하시겠습니까?");
	
	System.out.print("id추가>");
	String id = sc.next();
	System.out.print("이름추가>");
	String name = sc.next();
	System.out.println("전화번호추가>");
	String number = sc.next();
	System.out.println("주소추가>");
	String addr = sc.next();
	
		conn = DBUtil.getConnection();
		
		String sql = "insert into mymember"
					+"(mem_id, mem_name, mem_tel, mem_addr)"
					+"values(?,?,?,?)";
		
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id);
			pstmt.setString(2, name);
			pstmt.setString(3, number);
			pstmt.setString(4, addr);
			
			int cnt = pstmt.executeUpdate();	//최종적으로 실행해라!
			
			if(cnt>0){
				System.out.println("등록성공");
			}else{
				System.out.println("등록실패");
			}
		} catch (SQLException e1) {
			e1.printStackTrace();
		}finally{
			
			if(stmt!=null) try{stmt.close(); }catch(SQLException e){}
			if(pstmt!=null) try{pstmt.close(); }catch(SQLException e){}
			if(conn!=null) try{conn.close(); }catch(SQLException e){}
		}
	
}
//----------------------------------------------------------------------
private void delete(){
	
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	System.out.println("삭제하고 싶은 ID를 입력하세요>");
	String id = sc.next();
	
	conn = DBUtil.getConnection();
	
	String sql = " delete from mymember"
				+" where mem_id = ?";
	
	try {
		pstmt = conn.prepareStatement(sql);
		pstmt.setString(1, id);
		
		int cnt = pstmt.executeUpdate();	//최종적으로 실행해라!
		
		if(cnt>0){
			System.out.println("삭제성공");
		}else{
			System.out.println("삭제실패");
		}
	} catch (SQLException e) {
		e.printStackTrace();
	}finally{
		if(stmt!=null) try{stmt.close(); }catch(SQLException e){}
		if(pstmt!=null) try{pstmt.close(); }catch(SQLException e){}
		if(conn!=null) try{conn.close(); }catch(SQLException e){}
	}
}
//--------------------------------------------------------------------------
private void update(){
	
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	System.out.println("수정하고 싶은 이름를 입력하세요");
	String name = sc.next();
	System.out.println("수정하고싶은 전화번호를 입력하세요");
	String number = sc.next();
	System.out.println("수정하고 싶은 주소를 입력하세요");
	String addr = sc.next();
	System.out.println("어떤 ID를 수정할까요?");
	String id = sc.next();
	
	conn = DBUtil.getConnection();
	
	//id 존재검사 하고 그 밑에서 inset처럼 3가지를 받아서 > 그거를 음....update를 하는건데 하는방법은?
	String sql = "update mymember"
				+"set mem_name = ?, mem_tel = ?, mem_addr = ?"
				+"where mem_id = ?";
	
	try {
		pstmt = conn.prepareStatement(sql);
		pstmt.setString(1, name);
		pstmt.setString(2, name);
		pstmt.setString(3, name);
		pstmt.setString(4, name);
		
		int cnt = pstmt.executeUpdate();	//최종실행
		
		if(cnt>0){
			System.out.println("수정성공");
		}else{
			System.out.println("수정실패");
		}
	} catch (SQLException e) {
		e.printStackTrace();
	}finally{
		if(stmt!=null) try{stmt.close(); }catch(SQLException e){}
		if(pstmt!=null) try{pstmt.close(); }catch(SQLException e){}
		if(conn!=null) try{conn.close(); }catch(SQLException e){}
	}
}
//---------------------------------------------------------------------------------
private void show(){
	
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	System.out.println("mymember 테이블의 전체자료입니다");
	
	String sql = "select *"
				+"from mymember";
	
	
	try {
		rs = stmt.executeQuery(sql);
		while(rs.next()){
			System.out.println("===================");
			System.out.println("id : " + rs.getString("mem_id"));
			System.out.println("name : " + rs.getString("mem_name"));
			System.out.println("tel : " + rs.getString("mem_tel"));
			System.out.println("addr : " + rs.getString("mem_addr"));
			System.out.println("===================");
			
			int cnt = pstmt.executeUpdate();
		}
		System.out.println("");
		
	} catch (SQLException e) {
		e.printStackTrace();
	}finally{
		//5번 자원반납하기
		if(rs!=null) try{rs.close(); }catch(SQLException e){}
		if(stmt!=null) try{rs.close(); }catch(SQLException e){}
		if(conn!=null) try{rs.close(); }catch(SQLException e){}
	}
}
}


//===========================================================================