package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class JdbcTest03 {
   /*
   문제2) lprod_id값을 2개 입력 받아 두 값 중 작은 값부터 큰 값 사이의 자료들을 출력하시오.
   */
   public static void main(String[] args) {
      
      Scanner sc = new Scanner(System.in);
      
      System.out.println("첫번째 lprod_id값 입력 : ");
      int num1 = sc.nextInt();
      
      System.out.println("두번째 lprod_id값 입력 : ");
      int num2 = sc.nextInt();
      
      int max, min;
      /*
      if(num1 > num2){
         max = num1;
         min = num2;
         
      }else{
         max = num2;
         min = num1;
      }
      */
      max = Math.max(num1, num2);
      min = Math.min(num1, num2);
      
      Connection conn = null;
      Statement stmt = null;
      ResultSet rs = null;
      
      try {
         Class.forName("oracle.jdbc.driver.OracleDriver");
         
         conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe",
               "YJS07",
               "java");
         
         String sql = "select * from lprod WHERE LPROD_ID BETWEEN " + min + " AND " + max;
         //String sql = "select * from lprod WHERE LPROD_ID >= " + min + " AND LPROD_ID <= " + max;
         
         stmt = conn.createStatement();
         
         rs = stmt.executeQuery(sql);	//실행이 안될때 sql문을 출력되게 해서 오라클에서 붙여넣기로 실행[test]할 수 있다.
         
         System.out.println("실행한 SQL문 : " + sql);
         System.out.println("-------------- 결과출력 -----------------");
         
         
         while(rs.next()){
            
            System.out.println("lprod_id : " + rs.getInt("lprod_id"));
            System.out.println("lprod_gu : " + rs.getString("lprod_gu"));
            System.out.println("lprod_nm : " + rs.getString("lprod_nm"));
            System.out.println("-------------------------------------");
            
         }
         System.out.println("출력 끝!");
         
         
      } catch (SQLException e) {
         
      
      }catch (ClassNotFoundException e) {
         e.printStackTrace();
      }finally{
         if(rs != null) try{rs.close();} catch(SQLException e){}
         if(stmt != null) try{stmt.close();} catch(SQLException e){}
         if(conn != null) try{conn.close();} catch(SQLException e){}
      }
         
      }

   }