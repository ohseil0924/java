package kr.or.ddit.controller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Scanner;

import kr.or.ddit.mvc.service.IMemberService;
import kr.or.ddit.mvc.service.MemberServiceImpl;
import kr.or.ddit.mvc.vo.MemberVO;
import kr.or.ddit.util.DBUtil;

public class MemberController {
   private Scanner sc = new Scanner(System.in);
   
   //controller는 service객체를 사용하기 때문에
   //service객체게 저장될 변수가 필요하다.
   private IMemberService service;
   
   public MemberController() {
	   service = new MemberServiceImpl();
}
   
   public static void main(String[] args) {
      new MemberController().memberStart();
   }
   
   public void memberStart(){
      while(true){
         int choice = displayMenu();
         
         switch (choice) {
         case 1://추가
            insertMember();
            
            break;
         
         case 2://삭제
            deleteMember();
            
            break;
         
         case 3://수정
            updateMember();
            break;

         case 4://전체 출력
            displayMember();
            break;
            
         case 5 : //자려수정2
        	 updateMember2();

         case 0://작업종료
            System.out.println("작업을 마칩니다.");
            /*System.exit(0);*/
            return;
         
         default:
            System.out.println("번호를 잘못 입력했습니다.");
         }
      }
   }
   
   

   //메뉴 출력 및 작업번호를 입력받아 반환하는 메서드
   private int displayMenu(){
      System.out.println();
      System.out.println("--------------- 작업 선택  ---------------");
      System.out.println("1. 자료추가");
      System.out.println("2. 자료삭제");
      System.out.println("3. 자료수정");
      System.out.println("4. 전체자료출력");
      System.out.println("5. 자료수정 2"); //원하는 항목 하나만 수정
      System.out.println("0. 작업종료");
      System.out.println("--------------------------------------");
      System.out.println("작업선택 >>");
      int num = Integer.parseInt(sc.nextLine());
      
      return num;
   }
   
   

   
   //회원 정보를 추가하는 메서드------------------------------------------
   private void insertMember() {
      
      System.out.println();
      System.out.println("추가할 회원정보를 입력하세요.");
      
      int count = 0;
      String memId; //입력한 회원ID가 저장될 변수
      
      do{
         System.out.println("회원ID >> ");
         memId = sc.nextLine();
         
         count = service.getMemberCount(memId);
         if(count > 0){
            System.out.println("회원ID가 " + memId + "인 회원은 이미 존재 합니다.");
            System.out.println("다른 ID로 다시 입력하세요.");
            System.out.println();
         }
      }while(count > 0);
      System.out.println("회원이름 >> ");
      String memName = sc.nextLine();
      System.out.println("전화번호>>");
      String memTel = sc.nextLine();
      System.out.println("주소>>");
      String memAddr = sc.nextLine();
      
      //service로 보낼 memberVO객체를 생성하고 입력한 자료를 셋팅한다.
      MemberVO memVo = new MemberVO();
      memVo.setMem_id(memId);
      memVo.setMem_name(memName);
      memVo.setMem_tel(memTel);
      memVo.setMem_addr(memAddr);
      //service의 insert하는 매서드 호출
      int cnt = service.insertMember(memVo);
      
      if(cnt>0){
    	  System.out.println("insert 성공");
      }else{
    	  System.out.println("insert 실패");
      }
   }
   
 //-전체 회원 정보를 출력하는 메서드----------------------------------------------------------------------------  
   

   private void displayMember(){
	   
	   List<MemberVO> memList = service.getAllMember();
	   
      Connection conn = null;
      Statement stat = null;
      ResultSet rs = null;
      
      System.out.println();
      System.out.println("-----------------------------------------");
      System.out.println("ID	이름	  전화번호	 주소");
      System.out.println("-----------------------------------------");
      if(memList==null || memList.size()==0){
    	  System.out.println("등록된 회원이 하나도 없습니다");
      }else{
    	  for(MemberVO memVo : memList){
    		  System.out.print(memVo.getMem_id() + "\t");
    		  System.out.print(memVo.getMem_name() + "       ");
    		  System.out.print(memVo.getMem_tel() + "\t");
    		  System.out.println(memVo.getMem_addr());
    	 
      }
      }
      System.out.println("-----------------------------------------");
      System.out.println("출력끝");
   }
      
//회원정보를 삭제하는 메서드-------------------------------------------------------------------------------------
   private void deleteMember(){
      
      System.out.println();
      System.out.println("삭제할 회원정보를 입력해주세요.");
      System.out.println("삭제할 회원ID >>");
      String memId = sc.nextLine();
     
      int cnt = service.deleteMember(memId);
      
      if(cnt>0){
    	  System.out.println("delete 성공");
      }else{
    	  System.out.println("delete 실패");
      }
      
      }
      
 //---------------------------------------------------------------------------------  
   //회원정보를 수정하는 메서드
   private void updateMember(){
      
      System.out.println();
      System.out.println("수정할 회원 정보를 입력하세요..");
      
      System.out.print("회원ID >> ");
      String memId = sc.nextLine();
      
      //나머지 데이터를 입력하기 전에 memId가 있는지 확인한다.
      int count = service.getMemberCount(memId);
      
      if(count == 0){//없는 회원이면....
         System.out.println(memId + "회원은 없는 회원ID 입니다.");
         System.out.println("수정작업을 마칩니다.");
         return; // 메서드가 끝나게 된다.
      }
      
      System.out.print("새로운 회원이름>> ");
      String memName = sc.nextLine();
      
      System.out.println("새로운 회원 전화번호>>");
      String memTel = sc.nextLine();
      
      System.out.println("새로운 회원주소>>");
      String memAddr = sc.nextLine();
      
      //service로 보낼 memberVO객체를 생성하고 입력한 자료를 셋팅한다.
      MemberVO memVo = new MemberVO();
      memVo.setMem_id(memId);
      memVo.setMem_name(memName);
      memVo.setMem_tel(memTel);
      memVo.setMem_addr(memAddr);
      //service의 insert하는 매서드 호출
      int cnt = service.updateMember(memVo);
      
      if(cnt>0){
    	  System.out.println(memId + "update 성공");
      }else{
    	  System.out.println("update 실패");
      }
   }
 //회원 정보를 수정하는 매서드(원하는 컬럼 한가지만 수정한다)--------------
   private void updateMember2(){
	      
	      System.out.println();
	      System.out.println("수정할 회원 정보를 입력하세요..");
	      
	      System.out.print("회원ID >> ");
	      String memId = sc.nextLine();
	      
	      //나머지 데이터를 입력하기 전에 memId가 있는지 확인한다.
	      int count = service.getMemberCount(memId);
	      
	      if(count == 0){//없는 회원이면....
	         System.out.println(memId + "회원은 없는 회원ID 입니다.");
	         System.out.println("수정작업을 마칩니다.");
	         return; // 메서드가 끝나게 된다.
	      }
	      
	      
	      int num;
	      String updateField = null; //수정할 컬럼명이 저장될 변수
	      String updateStr = null; // 수정할 컬럼의 한글명
	      
	      do{
	         System.out.println();
	         System.out.println("수정할 항목을 선택하세요.");
	         System.out.println("1.회원이름  2.전화번호   3.회원주소");
	         System.out.println("----------------------------------------");
	         System.out.println("수정할 항목을 입력>>");
	         num = sc.nextInt();
	         
	         switch(num){
	            case 1:
	               updateField = "mem_name";
	               updateStr = "회원이름";
	               break;

	            case 2:
	               updateField = "mem_tel";
	               updateStr = "전화번호";
	               break;
	         
	            case 3:
	               updateField = "mem_addr";
	               updateStr = "회원주소";
	               break;
	         
	            default :
	               System.out.println("수정 항목을 잘못 선택했습니다.");
	               System.out.println("다시 선택하세요.");
	         }
	         
	      }while(num < 1 || num > 3);

	      sc.nextLine(); //입력 버퍼 비우기
	      System.out.println();
	      System.out.println("새로운 " + updateStr + " >> ");
	      String updateData = sc.nextLine();
	      
	      int cnt = service.updateMember2(updateData, updateField, memId);
	      
	      if(cnt>0){
	    	  System.out.println(memId + "update2 성공");
	      }else{
	    	  System.out.println("update2 실패");
	      }
	   /*   int count = service.getMemberCount(memId);*/
	 
	      
	   }  
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
//---------------------------------------------------------------------------------
}