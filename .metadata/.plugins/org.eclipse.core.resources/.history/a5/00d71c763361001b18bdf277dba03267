package kr.or.ddit.mvc.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import kr.or.ddit.mvc.vo.MemberVO;
import kr.or.ddit.util.DBUtil3;

public class MemberDaolmpl implements IMemberDao {

	@Override
	public int insertMember(MemberVO memVO) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int cnt = 0;
		try {
			conn = DBUtil3.getConnection();
			String sql = "INSERT INTO MYMEMBER (MEM_ID,MEM_NAME,MEM_TEL,MEM_ADDR)"
					+ " VALUES(?, ?, ?, ?) ";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memVO.getMem_id());
			pstmt.setString(2, memVO.getMem_name());
			pstmt.setString(3, memVO.getMem_tel());
			pstmt.setString(4, memVO.getMem_addr());
			
			cnt = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		
		return 0;
	}

	@Override
	public int deleteMember(String memId) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int cnt =0;
		try {
			conn = DBUtil3.getConnection();
			String sql ="DELETE FROM MYMEMBER WHERE MEM_ID =?"; 
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memId);
			cnt = pstmt.executeUpdate();
					
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		return 0;
	}

	
	@Override
	public int updateMember(MemberVO memVO) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		try {
			conn = DBUtil3.getConnection();
			
			String sql = "UPDATE MYMEMBER SET "
					+ "MEM_NAME = ?,"
					+ "MEM_TEL = ?,"
					+ "MEM_ADDR = ? "
					+ "where mem_id = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, memVo.getMem_name);
			pstmt.setString(1, memVo.getMem_tel);
			pstmt.setString(1, memVo.getMem_addr);
			pstmt.setString(1, memVo.getMem_id);
			cnt = pstmt.executeUpdate();
					
		} catch (SQLException e) {
			cnt = 0;
			e.printStackTrace();
		}finally{
			if(pstmt!=null) try{ pstmt.close();}catch(SQLException e){}
			if(conn!=null) try{ conn.close();}catch(SQLException e){}
		}
		return 0;
	}

	@Override
	public List<MemberVO> getAllMember() {
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "SELECT * FROM MYMEMBER";
		
		return null;
	}

	@Override
	public int getMemberCount(String memId) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		return 0;
	}

	
	
}
