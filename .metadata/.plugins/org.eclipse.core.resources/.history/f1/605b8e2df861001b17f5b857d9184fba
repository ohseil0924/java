package kr.or.ddit.mvc.service;

import java.util.List;
import java.util.Map;

import kr.or.ddit.mvc.vo.MemberVO;

/**
 * Dao에 작성된 매서드를 작업에 맞게 호출하여 결과를 받아오고
 * 받아온 결과를 controller에게 보내주는 역활을 수행한다. 
 * 
 * 보통 Dao의 매서드 구조와 같게 만든다.
 * 
 * @author PC-16
 */
public interface IMemberService {

	
	public int insertMember(MemberVO memVo);
	
	/**
	 * 회원ID를 인수로 받아서 해당 회원정보를 삭제하는 매서드 
	 * @param memId 삭제할 회원ID
	 * @return 삭제 성공 : 1 | 삭제 실패 : 0
	 */
	public int deleteMember(String memId);
	
	/**
	 * MemberVO자료를 이용하여 회원 정보를 Update하는 매서드
	 * @param memVo Update할 회원 정보가 저장된 MemberVO객체
	 * @return 작업성공 : 1 | 작업실패 : 0
	 */
	public int updateMember(MemberVO memVo);
	
	/**
	 * DB의 전체 회원 정보를 가져와서 List에 담아서 반환하는 매서드
	 * @return MemberVO객체를 담고 있는 list 객체
	 */
	public List<MemberVO> getAllMember();
	
	/**
	 * 회원id를 인수로 받아서 해당 회원의 개수를 반환하는 매서드
	 * @param memId 검색할 회원 ID
	 * @return 검색된 회원ID 개수 
	 */
	public int  getMemberCount(String memId);
	
	/**
	 * MemberVO자료를 이용하여 회원 정보를 up데이트 하는 매서드
	 * @param memVo update할 회원 정보가 저장된 memberVo객체
	 * @return 작업성공 : 1 | 작업실패 : 0
	 */
	public int updateMember2(Map<String,String>paramMap);
	
	
	
}





















